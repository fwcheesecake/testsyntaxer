/*
 * Ejemplo desarrollado por Erick Navarro
 * Blog: e-navarro.blogspot.com
 * Julio - 2018
 */

package analizadores;
import java_cup.runtime.*;

parser code
{:
    /**
     * Método al que se llama automáticamente ante algún error sintactico.
     **/
    public void syntax_error(Symbol s) {
        System.out.println("Error Sintáctico en la Línea " + (s.left) +
        " Columna "+s.right+ ". No se esperaba este componente: " +s.value+".");
    }

    /**
     * Método al que se llama automáticamente ante algún error sintáctico
     * en el que ya no es posible una recuperación de errores.
     **/
    public void unrecovered_syntax_error(Symbol s) throws java.lang.Exception{
        System.out.println("Error síntactico irrecuperable en la Línea " +
        (s.left)+ " Columna "+s.right+". Componente " + s.value +
        " no reconocido.");
    }
:}

terminal IF;
terminal ELSE;
terminal SWITCH;
terminal CASE;
terminal DEFAULT;
terminal WHILE;
terminal DO;
terminal FOR;
terminal BREAK;
terminal CONTINUE;
terminal RETURN;
terminal FINAL;

terminal BOOLEAN;
terminal BYTE;
terminal SHORT;
terminal INT;
terminal LONG;
terminal FLOAT;
terminal DOUBLE;
terminal STRING;

terminal CLASS;

terminal RESERVADA;

terminal PRIVATE;
terminal PUBLIC;
terminal PROTECTED;
terminal PACKAGE;
terminal IMPORT;

terminal INCREMENTO;
terminal DECREMENTO;
terminal ANDLOGICO;
terminal ORLOGICO;
terminal NEGACION;
terminal SUMA;
terminal RESTA;
terminal MULTIPLICACION;
terminal DIAGONAL;
terminal MODULO;

terminal IGUAL;
terminal MAYORIGUAL;
terminal MENORIGUAL;
terminal MAYORQUE;
terminal MENORQUE;
terminal DIFERENTEDE;

terminal COMILLAS;
terminal INTERROGACION;
terminal VIRGUILLA;
terminal DOBLEMAYORQUE;
terminal DOBLEMENORQUE;
terminal TRIPLEMENORQUE;
terminal OR;
terminal AND;
terminal EXPONENTE;
terminal ASIGNACION;
terminal MASIGUAL;
terminal MENOSIGUAL;
terminal PORIGUAL;
terminal DIVISIONIGUAL;
terminal MODULOIGUAL;
terminal NOTIGUAL;
terminal ORIGUAL;
terminal ANDIGUAL;
terminal ASIGNACIONOREXCLUSIVO;
terminal DOBLEMAYORQUEIGUAL;
terminal DOBLEMENORQUEIGUAL;
terminal PARENTESISIZQ;
terminal PARENTESISDER;
terminal LLAVEIZQ;
terminal LLAVEDER;
terminal CORCHETEIZQ;
terminal CORCHETEDER;
terminal PUNTOYCOMA;
terminal DOSPUNTOS;
terminal PUNTO;
terminal COMA;
terminal VERDADERO;
terminal FALSO;
terminal ENTERO;
terminal FLOTANTE;
terminal IDENTIFICADOR;
terminal ERROR;

non terminal ini;

non terminal packageDeclaration;
non terminal importDeclaration;
non terminal importDeclarations;
non terminal classDeclaration;

non terminal instrucciones;
non terminal instruccion;
non terminal Double expresion;

precedence left SUMA,RESTA;
precedence left MULTIPLICACION,DIAGONAL;

// precedence right UMENOS;

start with ini;

ini ::= packageDeclaration classDeclaration
    | importDeclarations classDeclaration
    | packageDeclaration importDeclarations classDeclaration
    | classDeclaration
;
packageDeclaration::= PACKAGE IDENTIFICADOR PUNTOYCOMA;

importDeclarations::= importDeclaration
    | importDeclaration importDeclarations
;
importDeclaration::= IMPORT IDENTIFICADOR PUNTOYCOMA
    | IMPORT IDENTIFICADOR PUNTO MULTIPLICACION PUNTOYCOMA
    | IMPORT IDENTIFICADOR PUNTO IDENTIFICADOR PUNTO MULTIPLICACION PUNTOYCOMA
;
classDeclaration::= CLASS IDENTIFICADOR LLAVEIZQ instrucciones LLAVEDER;

instrucciones ::=
   instruccion instrucciones
 | instruccion
 | error instrucciones
;

instruccion ::=
   IDENTIFICADOR ASIGNACION CORCHETEIZQ expresion:a CORCHETEDER PUNTOYCOMA     {:System.out.println("El valor de la expresión es: "+a);:}
;

expresion  ::=
    //RESTA expresion:a                      {:RESULT=a*-1;:}%prec RESTA
    expresion:a SUMA expresion:b                {:RESULT=a+b;:}
 |  expresion:a RESTA expresion:b               {:RESULT=a-b;:}
 |  expresion:a MULTIPLICACION expresion:b      {:RESULT=a*b;:}
 |  expresion:a DIAGONAL expresion:b            {:RESULT=a/b;:}
 |  ENTERO:a                                    {:RESULT=Double.parseDouble((String) a);:}
 |  FLOTANTE:a                                  {:RESULT=Double.parseDouble((String) a);:}
 |  PARENTESISIZQ expresion:a PARENTESISDER     {:RESULT=a;:}
;